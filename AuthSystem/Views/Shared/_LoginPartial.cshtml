@using Microsoft.AspNetCore.Identity
@using AuthSystem.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    var userName = user != null ? await UserManager.GetUserNameAsync(user) : string.Empty;
    var firstName = user != null ? user.FirstName : string.Empty; 
    var lastName = user != null ? user.LastName : string.Empty;
    var profilePicture = user != null && user.ProfilePhoto != null ? user.ProfilePhoto : "/user.png";
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav nav-item" >
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @firstName @lastName</a>
            <div style="align-items: center; justify-content : center">
                <img src="@Url.Content(profilePicture)" style="width: 30px; height : 30px; border-radius: 40px"  class="nav-livk"/>
            </div>
        </li>
        <li class="nav nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@model AuthSystem.Models.Subject

@{
    ViewData["Title"] = "Select Subject";
}
<style>
    * {
        box-sizing: border-box;
    }

    /* Create three equal columns that floats next to each other */
    .column {
        float: left;
       width=25 rem;
        margin:5px;
        padding:20px;
        height: 120px; /* Should be removed. Only for demonstration */
        background-color:lightblue;
        display: flex;
        flex-direction: row;
        border-radius: 15px;
        
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;


    }

</style>

    <h1>All subjects</h1>
    <div>

    @foreach (var subject in Model.Subjects)
    {

    <a href="@Url.Action("SelectSubject", "Subject", new { subjectId = subject.SubjectId })">
            <div class="column" style="width: 25rem; display:flex; flex-direction:row;" data-subject-id="@subject.SubjectId">
               <div class="mydiv">

                    <h3>@subject.SubjectName</h3>
               </div>
                
              
            </div>
    </a>
    }
    </div>
    <form method="post" asp-controller="Subject" asp-action="Create" class="form-control-lg" style="width:300px; height:300px;">
        <input asp-for="SubjectName" placeholder="Enter new subject name" class="form-control" />
        <button type="submit" class="btn btn-secondary">Create</button>
    </form>
@section Scripts {
    <script>
        $(document).ready(function () {
            // Get all subject containers
            var subjectContainers = $('.column[data-subject-id]');

            // Loop through each subject container
            subjectContainers.each(function () {
                var container = $(this);
                var subjectId = container.data('subject-id');

                // Send AJAX request to fetch questions count
                $.ajax({
                    url: '/Subject/GetQuestionsCount',
                    method: 'GET',
                    data: { SubjectId: subjectId },
                    success: function (data) {
                        // Update subject container with questions count
                        var count = data.count;
                        var countHtml = '<span class="questions-count">' + count + ' MCQs so far</span>';
                        container.append(countHtml);
                            document.getElementById('message').innerHTML = countHtml;
                    },
                    error: function () {
                        console.error('Failed to fetch questions count for subject with ID ' + subjectId);
                    }
                });
            });
        });
    </script>

}
<style>

    .mydiv{
       display : flex;
       flex-direction : row;
    }
</style>
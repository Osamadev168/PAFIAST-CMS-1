@model List<MCQ>;
@{
    ViewData["Title"] = "Demo|Test";
    int i = 0;

}
    
<div class="container">
    @if (Model != null && Model.ToList().Count > 0)
    {
        <form method="post" action="@Url.Action("SubmitResult")" >
            <input type="submit" value="Submit"  />

        <ul class="nav nav-tabs" role="tablist">
            @{
                foreach (var sectionGroup in Model.GroupBy(q => q.Section))
                {
                    if (i == 0)
                    {
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" data-bs-target="#@sectionGroup.Key">@sectionGroup.Key</a>
                        </li>
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="@sectionGroup.Key">
                                    <br>
                                    <p>@sectionGroup.Count()</p>
                                    <h3>@sectionGroup.Key Tab Area</h3>
                                @foreach (var question in sectionGroup)
                                {
                                        <ol class="text-justify text-uppercase">@Html.Raw(@question.Content)</ol>
                                        <div class="options form-control input-group-text">
                                            <ol>
                                                @Html.Raw(shuffleOptions(question.Option1, question.Option2, question.Option3, question.Option4)
                            .Aggregate("", (acc, option) => $"{acc}<li><label>{option}</label><input class='form-check-input options' type='radio' id='{question.Id}{option}' value='{option}' name='answers[{question.Id}]' onclick='userSelection({question.Id} , {option})' /></li>"))
                                            </ol>
                                        </div>
                                        <hr />
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" data-bs-target="#@sectionGroup.Key">@sectionGroup.Key</a>
                        </li>
                        <div class="tab-content">

                            <div class="tab-pane fade" id="@sectionGroup.Key">

                                <br>
                                    <p>@sectionGroup.Count()</p>
                                    <h3>@sectionGroup.Key Tab Area</h3>
                                @foreach (var question in sectionGroup)
                                {

                                        <ol class="text-justify text-uppercase">@Html.Raw(@question.Content)</ol>
                                        <div class="options form-control input-group-text">

                                            <ol>

                                                @Html.Raw(shuffleOptions(question.Option1, question.Option2, question.Option3, question.Option4)
                            .Aggregate("", (acc, option) => $"{acc}<li><label>{option}</label><input class='form-check-input options' type='radio' id='{question.Id}{option}' value='{option}' name='answers[{question.Id}]' onclick='userSelection({question.Id} ,  {option})'/></li>"))
                                            </ol>
                                        </div>
                                        <input type="hidden" name="answers[@question.Id]" id="answer_{question.Id}" value="" />
                                        <hr />

                                }
                            </div>
                        </div>
                    }
                    i++;
                }
            }
        </ul>
        </form>
    }
</div>





@functions

{

    public List<string> shuffleOptions (params string[] options)

    {
        var randOptions = new Random();
        return options.OrderBy(x => randOptions.Next()).ToList();
    }

}

                    <script>

    <script>
        function userSelection(questionId, option) {
            // Find the hidden input field for this question
            var answerInput = document.getElementById(`answer_${questionId}`);
            if (answerInput) {
                // Update its value with the selected option
                answerInput.value = option;
            }
        }
</script>

    

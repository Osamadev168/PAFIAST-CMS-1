@model List<MCQ>
@{
    ViewData["Title"] = "Demo|Test";
}
<h1>Demo Test</h1>
<p>@Model.Count  Questions</p>

<form method ="post" action="@Url.Action("SubmitResult")">
  
    @foreach (var sectionGroup in Model.GroupBy(q => q.Section))
{
        <p>Section:<h1>@sectionGroup.Key.ToUpper()</h1></p>
   

    @foreach (var question in sectionGroup)
    {
        <ol class="text-justify text-uppercase">@Html.Raw(@question.Content)</ol>
        <div class="options form-control input-group-text">
            <ol>
                @Html.Raw(shuffleOptions(question.Option1, question.Option2, question.Option3, question.Option4)
                    .Aggregate("", (acc, option) => $"{acc}<li><label>{option}</label><input class='form-check-input options' type='radio' id='{question.Id}{option}' value='{option}' name='{question.Id}' /></li>"))
            </ol>
        </div>
        <hr />
    }
}


    <button type="submit" value="submit"  class="btn btn-outline-success">Submit</button>

</form>

@functions

{

    public List<string> shuffleOptions (params string[] options)

    {
        var randOptions = new Random();
        return options.OrderBy(x => randOptions.Next()).ToList();
    }

}
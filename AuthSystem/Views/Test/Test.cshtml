@model AuthSystem.Models.Test
@{
    ViewData["Title"] = "Create Test";
}

<h1>Create a new test</h1>

<form method="post" asp-action="Create" asp-controller="Test" class="form-control">
    <div>
        <label for="testName">Test Name:</label>
        <input type="text" id="testName" name="testName" class="form-control" required/>
    </div>

    <div id="subjects-container" class="subjects-container">
        @foreach (var subject in Model.Subjects)
        {
            <div class="form-check">
                <input type="checkbox" name="selectedSubjectIds" value="@subject.SubjectId" id="subject_@subject.SubjectId" class="form-check-input" />
                <label for="subject_@subject.SubjectId">@subject.SubjectName.ToUpper()</label>
                <input type="number" name="percentages[@subject.SubjectId]" id="percentage_@subject.SubjectId" class="percentage-input form-control-sm" disabled min="1" max="100" required  />
                %
            </div>
        }
    </div>
   
    <div>
        Total Percentage: <span id="totalPercentage">0</span>%
    </div>

    <button type="submit" id="submit-btn" disabled class="btn btn-success">Create</button>
</form>
<hr />
<h2>Tests list</h2>


<hr />
    @foreach (var test in Model.TestList)
    {
    <div class="border border-success border-1 rounded gap-2 d-grid ">

        <h3>@test.TestName</h3>
        <ol>

            @foreach (var detail in test.TestDetails)
            {
                <li>@detail.Subject.SubjectName - @detail.Percentage%</li>


            }
            <a class="btn btn-primary" href="@Url.Action("DemoTest", "Test",  new{Id = test.Id})">View Demo</a>


        </ol>
        <br />
        <hr />
        </div>
    }





<script>
   function calculateTotalPercentage() {
    var totalPercentage = 0;
    var testName = document.getElementById('testName').value;
    var percentageInputs = document.querySelectorAll('#subjects-container input[type="number"]:enabled');
    percentageInputs.forEach(function (input) {
        if (input.value) {
            totalPercentage += parseInt(input.value);
        }
    });
        var submitButton = document.getElementById("submit-btn");
        if (totalPercentage != 100) {
            submitButton.setAttribute('disabled', 'disabled');
        }
        else {
            submitButton.removeAttribute('disabled');
        }
    
    return totalPercentage;
}


    function updateTotalPercentage() {
        var totalPercentageElement = document.getElementById('totalPercentage');
        var totalPercentage = calculateTotalPercentage();
        totalPercentageElement.textContent = totalPercentage;
    }
   

    updateTotalPercentage();
    document.querySelectorAll('#subjects-container input[type="number"]').forEach(function (input) {
        input.addEventListener('input', updateTotalPercentage);
    });
    document.querySelectorAll('#subjects-container input[type="checkbox"]').forEach(function (checkbox) {
        checkbox.addEventListener('click', function () {
            var percentageInputId = "percentage_" + checkbox.value;
            var percentageInput = document.getElementById(percentageInputId);
            var title = document.getElementById("testName").value;
            percentageInput.disabled = !checkbox.checked;
            if (!checkbox.checked || title==null) {
                percentageInput.value = "";
            }
            updateTotalPercentage(); 
        });
    });
    
</script>


